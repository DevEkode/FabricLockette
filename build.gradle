plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
    id 'nebula.release' version '15.2.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name+'-mc'+project.archives_mc_version
//version = project.mod_version
group = project.maven_group

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-configuration2
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'
    shadow group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
    shadow group: 'com.google.code.gson', name: 'gson', version: '2.8.7'

    // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'
    shadow group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'

    // https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.9.0'
    shadow group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.9.0'

    implementation 'com.github.f4b6a3:uuid-creator:3.7.0'
    shadow 'com.github.f4b6a3:uuid-creator:3.7.0'
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier 'shadow-dev'
    minimize()
}

remapJar {
    dependsOn shadowJar
    input.set shadowJar.archiveFile.get()
}

processResources {
    //inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

configurations.modImplementation.extendsFrom(configurations.shadow)

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
